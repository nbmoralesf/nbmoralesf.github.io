#library(plotly)
library(vcd)
library(ppcor)
ArabBarometer <- read_csv("/Users/nataliamorales/Documents/ArabBarometer_WaveVIII_English_v1.csv")
dim(ArabBarometer)
head(ArabBarometer)
#View(ArabBarometer)
jordan_AB <- ArabBarometer %>%
filter(COUNTRY == 8) %>%
select(COUNTRY, WT, DATE, Q1, Q103, Q201A_1, Q201A_2, Q201A_3, Q201A_31C, Q201B_6, Q201B_4, Q201B_13, Q201B_12, Q201B_15, Q204A_3, Q204_2, Q204_3, Q204_11, Q204_20, Q512, Q301A, Q1001, Q1002)
jordan_AB <- ArabBarometer %>%
dplyr::filter(COUNTRY == 8) %>%
dplyr::select(COUNTRY, WT, DATE, Q1, Q103, Q201A_1, Q201A_2, Q201A_3, Q201A_31C, Q201B_6, Q201B_4, Q201B_13, Q201B_12, Q201B_15, Q204A_3, Q204_2, Q204_3, Q204_11, Q204_20, Q512, Q301A, Q1001, Q1002)
dim(jordan_AB)
head(jordan_AB)
#View(jordan_AB)
filt_jordan_AB <- jordan_AB %>%
dplyr::filter(Q103 <=10,
Q201A_1 <=10,
Q201A_2 <=10,
Q201A_3 <=10,
Q201A_31C <=10,
Q201B_6 <=10,
Q201B_4 <=10,
Q201B_13 <=10,
Q201B_12 <=10,
Q201B_15 <=10,
Q204A_3 <=10,
Q204_2 <=10,
Q204_3 <=10,
Q204_11 <=10,
Q204_20 <=10,
Q512 <=10,
Q301A <=10,
Q1001 != 99999)
avg_jordan_AB <- filt_jordan_AB %>%
dplyr::mutate(avg_trust = rowMeans(select(., Q201A_1, Q201A_2, Q201A_3, Q201A_31C, Q201B_6, Q201B_4), na.rm = TRUE))
filt_jordan_AB <- jordan_AB %>%
dplyr::filter(Q103 <=10,
Q201A_1 <=10,
Q201A_2 <=10,
Q201A_3 <=10,
Q201A_31C <=10,
Q201B_6 <=10,
Q201B_4 <=10,
Q201B_13 <=10,
Q201B_12 <=10,
Q201B_15 <=10,
Q204A_3 <=10,
Q204_2 <=10,
Q204_3 <=10,
Q204_11 <=10,
Q204_20 <=10,
Q512 <=10,
Q301A <=10,
Q1001 != 99999)
avg_jordan_AB <- filt_jordan_AB %>%
mutate(avg_trust = rowMeans(select(., Q201A_1, Q201A_2, Q201A_3, Q201A_31C, Q201B_6, Q201B_4), na.rm = TRUE))
filt_jordan_AB <- jordan_AB %>%
dplyr::filter(Q103 <=10,
Q201A_1 <=10,
Q201A_2 <=10,
Q201A_3 <=10,
Q201A_31C <=10,
Q201B_6 <=10,
Q201B_4 <=10,
Q201B_13 <=10,
Q201B_12 <=10,
Q201B_15 <=10,
Q204A_3 <=10,
Q204_2 <=10,
Q204_3 <=10,
Q204_11 <=10,
Q204_20 <=10,
Q512 <=10,
Q301A <=10,
Q1001 != 99999)
avg_jordan_AB <- filt_jordan_AB %>%
mutate(avg_trust = rowMeans(dplyr::select(., Q201A_1, Q201A_2, Q201A_3, Q201A_31C, Q201B_6, Q201B_4), na.rm = TRUE))
voted_jordan <- avg_jordan_AB %>%
dplyr::filter(Q301A == 1)
no_voted_jordan <- avg_jordan_AB %>%
dplyr::filter(Q301A == 2)
dim(avg_jordan_AB)
#head(avg_jordan_AB)
#voted_jordan
#no_voted_jordan
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Import data
weather <- read_csv("https://mac-stat.github.io/data/weather_canberra.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Import data
weather <- read_csv("https://mac-stat.github.io/data/weather_canberra.csv")
library(tidyverse)
library(readr)
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
# Import data
weather <- read_csv("https://mac-stat.github.io/data/weather_canberra.csv")
knitr::opts_chunk$set(echo = TRUE)
# Import data
weather <- read_csv("https://mac-stat.github.io/data/weather_canberra.csv")
# Import data
weather <- read_csv("https://mac-stat.github.io/data/weather_canberra.csv")
library(tidyverse)
# Import data
weather <- read_csv("https://mac-stat.github.io/data/weather_canberra.csv")
# Examine the first six data rows
# What are the units of observation? What are the variables?
head(weather)
# Find the dimensions of the data
# (How many units of observation & variables are there?)
dim(weather)
nrow(weather)
# Examine the variable names
names(weather)
# Histogram
ggplot(weather, aes(x = temp3pm)) +
geom_histogram(color = "white")
# Density plot
ggplot(weather, aes(x = temp3pm)) +
geom_density()
# Summary statistics
weather %>%
summarize(min(temp3pm), median(temp3pm), max(temp3pm))
ggplot(weather, aes(y = temp3pm, x = temp9am)) +
geom_point() +
geom_smooth(method = "lm")
# Fit the model
model_1 <- lm(temp3pm ~ temp9am, data = weather)
# Obtain a model summary
summary(model_1)
ggplot(weather, aes(y = temp3pm, x = temp9am, color = humidity9am)) +
geom_point(alpha = 0.5)
ggplot(weather, aes(y = temp3pm, x = temp9am, color = cut(humidity9am, 3))) +
geom_point(alpha = 0.5) +
facet_wrap(~ cut(humidity9am, 3))
ggplot(weather, aes(y = temp3pm, x = temp9am, size = humidity9am)) +
geom_point(alpha = 0.5)
model_2 <- lm(temp3pm ~ temp9am + humidity9am, data = weather)
summary(model_2)
model_3 <- lm(temp3pm ~ raintoday, weather)
summary(model_3)
ggplot(weather, aes(x = temp3pm, fill = raintoday)) +
geom_density(alpha = 0.5)
ggplot(weather, aes(x = temp3pm, fill = raintoday)) +
geom_density(alpha = 0.5) +
facet_wrap( ~ raintoday)
model_4 <- lm(temp3pm ~ temp9am + raintoday, weather)
summary(model_4)
ggplot(weather, aes(y = temp3pm, x = temp9am, color = raintoday)) +
geom_point() +
geom_line(aes(y = model_4$fitted))
ggplot(weather, aes(y = temp3pm, x = humidity9am)) +
geom_point() +
geom_smooth(method = "lm")
model_6 <- lm(temp3pm ~ humidity9am, data = weather)
summary(model_6)
library(tidyverse)
# Option 1: tidytuesdayR package
## install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2025-01-21')
## OR
tuesdata <- tidytuesdayR::tt_load(2025, week = 3)
exped_tidy <- tuesdata$exped_tidy
peaks_tidy <- tuesdata$peaks_tidy
# Option 2: Read directly from GitHub
exped_tidy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-21/exped_tidy.csv')
peaks_tidy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-21/peaks_tidy.csv')
# Option 1: tidytuesdayR package
## install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2025-01-21')
## OR
tuesdata <- tidytuesdayR::tt_load(2025, week = 3)
exped_tidy <- tuesdata$exped_tidy
peaks_tidy <- tuesdata$peaks_tidy
# Option 2: Read directly from GitHub
exped_tidy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-21/exped_tidy.csv')
peaks_tidy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-21/peaks_tidy.csv')
View(exped_tidy)
View(peaks_tidy)
library(tidyverse)
library(ggplot2)
knitr::opts_chunk$set(
collapse = TRUE,
warning = FALSE,
message = FALSE,
fig.height = 3,
fig.width = 5,
fig.align = 'center')
library(tidyverse)
library(ggplot2)
library(readr)
raw_languages <- read_csv("/Users/nataliamorales/Documents/STAT 112/Project/languages.csv")
top_languages <- read_csv("/Users/nataliamorales/Documents/STAT 112/Project/top_100_languages.csv")
# Load packages
library(tidyverse)
library(tidymodels)
# Load packages we'll need to wrangle and plot the data
library(tidyverse)
# Load the data
bikes <- read.csv("https://Mac-Stat.github.io/data/bike_share.csv")
# Only keep / select some variables
# And round some variables (just for our demo purposes)
bikes <- bikes %>%
rename(rides = riders_registered, temp = temp_feel) %>%
mutate(windspeed = round(windspeed), temp = round(temp)) %>%
select(rides, windspeed, temp, weekend)
# Load package
library(tidymodels)
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs(simulated_data)
# Load packages we'll need to wrangle and plot the data
library(tidyverse)
# Load the data
bikes <- read.csv("https://Mac-Stat.github.io/data/bike_share.csv")
# Only keep / select some variables
# And round some variables (just for our demo purposes)
bikes <- bikes %>%
rename(rides = riders_registered, temp = temp_feel) %>%
mutate(windspeed = round(windspeed), temp = round(temp)) %>%
select(rides, windspeed, temp, weekend)
# Check out the dimensions
dim(bikes)
# Check out the first 3 rows
head(bikes, 3)
# Load package
library(tidymodels)
lm_spec <- linear_reg() %>%   # we want a linear regression model
set_mode("regression") %>%  # this is a regression task (y is quantitative)
set_engine("lm")            # we'll estimate the model using the lm function
# Check it out
lm_spec
# Fit bike_model_1
bike_model_1 <- lm_spec %>%
fit(rides ~ windspeed + temp, data = bikes)
# Check out the coefficients
bike_model_1 %>%
tidy()
# YOUR TURN
# Fit bike_model_2 & check out the coefficients
# Obtain R^2 for bike_model_1
bike_model_1 %>%
glance()
# YOUR TURN
# Obtain R^2 for bike_model_2
# Calculate predicted ridership (.pred) & corresponding residuals (.resid) using bike_model_1
# Just look at first 6 days
bike_model_1 %>%
augment(new_data = bikes) %>%
head()
# Predict ridership on a 60 degree day with 20 mph winds
bike_model_1 %>%
augment(new_data = data.frame(windspeed = 20, temp = 60))
# Predict ridership on a 60 degree day with 20 mph winds
bike_model_1 %>%
predict(new_data = data.frame(windspeed = 20, temp = 60))
# MAE for bike_model_1
# YOUR TURN: MAE for bike_model_2
# Calculate MAE for the first model
bike_model_1 %>%
augment(new_data = bikes) %>%
mae(truth = rides, estimate = .pred)
# YOUR TURN
# Calculate MAE for the second model
# Residual plot for bike_model_1
bike_model_1 %>%
augment(new_data = bikes) %>%
ggplot(aes(x = .pred, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0)
# YOUR TURN
# Residual plot for bike_model_2
# Import data
simulated_data <- read.csv("https://Mac-Stat.github.io/data/simulated_data.csv")
# Model y by the 6 input variables
new_model <- lm_spec %>%
fit(y ~ x1 + x2 + x3 + x4 + x5 + x6, simulated_data)
library(GGally)
ggpairs(simulated_data)
# Load packages we'll need to wrangle and plot the data
library(tidyverse)
# Load the data
bikes <- read.csv("https://Mac-Stat.github.io/data/bike_share.csv")
# Only keep / select some variables
# And round some variables (just for our demo purposes)
bikes <- bikes %>%
rename(rides = riders_registered, temp = temp_feel) %>%
mutate(windspeed = round(windspeed), temp = round(temp)) %>%
select(rides, windspeed, temp, weekend)
ggplot(bikes, aes(y = rides, x = temp)) +
geom_point()
ggplot(bikes, aes(y = rides, x = temp, color = windspeed)) +
geom_point()
ggplot(bikes, aes(y = rides, x = temp, color = windspeed)) +
geom_point() +
facet_wrap(~ weekend)
# Load package
library(tidymodels)
lm_spec <- linear_reg() %>%   # we want a linear regression model
set_mode("regression") %>%  # this is a regression task (y is quantitative)
set_engine("lm")            # we'll estimate the model using the lm function
# Check it out
lm_spec
# YOUR TURN
# Fit bike_model_2 & check out the coefficients
bike_model_2 <- lm_spec %>%
fit(rides ~ windspeed + temp + weekend, data = bikes) %>%
tidy()
# YOUR TURN
# Fit bike_model_2 & check out the coefficients
bike_model_2 <- lm_spec %>%
fit(rides ~ windspeed + temp + weekend, data = bikes)
bike_model_2 %>%
tidy()
ggplot(bikes, aes(y = rides, x = temp, color = (cut, windspeed, 4)) +
ggplot(bikes, aes(y = rides, x = temp, color = cut(weekend, 4)) +
geom_point() +
facet_wrap(~ weekend)
ggplot(bikes, aes(y = rides, x = temp, color = cut(weekend, 4))) +
geom_point() +
facet_wrap(~ weekend)
ggplot(bikes, aes(y = rides, x = temp, color = weekend) +
geom_point() +
facet_wrap(~ weekend)
ggplot(bikes, aes(y = rides, x = temp, color = weekend)) +
geom_point() +
facet_wrap(~ weekend)
ggplot(bikes, aes(y = rides, x = temp, color = windspeed)) +
geom_point() +
facet_wrap(~ weekend)
ggplot(bikes, aes(y = rides, x = temp, color = cut(windspeed, 4))) +
geom_point() +
facet_wrap(~ weekend)
ggplot(bikes, aes(y = rides, x = temp, color = cut(windspeed, 4))) +
geom_point()
ggplot(bikes, aes(y = rides, x = temp, color = windspeed)) +
geom_point() +
facet_wrap(~ weekend)
# YOUR TURN
# Obtain R^2 for bike_model_2
bike_model_2 %>%
glance()
# DON'T TYPE IN THIS CHUNK
# MAE for bike_model_1
bike_model_1 %>%
augment(new_data = bikes) %>%
summarize(mae = mean(abs(.resid)))
# MAE for bike_model_1
bike_model_1 %>%
augment(new_data = bikes) %>%
summarize(mae = mean(abs(.resid)))
# YOUR TURN: MAE for bike_model_2
bike_model_2 %>%
augment(new_data = bikes) %>%
summarize(mae = mean(abs(.resid)))
# YOUR TURN
# Calculate MAE for the second model
bike_model_2 %>%
augment(new_data = bikes) %>%
mae(truth = rides, estimate = .pred)
# YOUR TURN
# Residual plot for bike_model_2
bike_model_2 %>%
augment(new_data = bikes) %>%
ggplot(aes(x = .pred, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0)
# Import data
simulated_data <- read.csv("https://Mac-Stat.github.io/data/simulated_data.csv")
# Model y by the 6 input variables
new_model <- lm_spec %>%
fit(y ~ x1 + x2 + x3 + x4 + x5 + x6, simulated_data)
library(GGally)
ggpairs(simulated_data)
new_model %>%
augment(new_data = simulated_data) %>%
ggplot(aes(x = .pred, y = .resid)) +
geom_point(size = 0.1) +
geom_hline(yintercept = 0)
bikes %>% #Line after each %>%
group_by(weekend) %>% #Add a line for each command
summarize(median(rides))
bike_model_2 %>%
tidy()
library(tidyverse)
weather <- read.csv("../data/weather.csv")
library(tidyverse)
weather <- read.csv("../data/raw/weather.csv")
library(tidyverse)
weather <- read.csv("../raw/weather.csv")
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
View(weather)
#weather <- weather %>%
dim(weather)
weather <- weather %>%
mutate(PrecipYr = na.if(99999))
weather <- weather %>%
mutate(PrecipYr = na_if(99999))
weather <- weather %>%
mutate(na_if(PrecipYr, 99999))
View(weather)
weather <- weather %>%
mutate(na_if(PrecipYr, "99999"))
weather <- weather %>%
mutate(na_if(PrecipYr, 99999))
View(weather)
weather <- weather %>%
mutate(na_if(PrecipYr, 99999))
View(weather)
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999))
View(weather)
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(dateInYear = yday(date))
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = as.Date(date))
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date))
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date))
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date))
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date))
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date))
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
?write_csv
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
write_csv(weather, "weather_clean.csv")
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
write_csv(weather, "weather_clean.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
write_csv(weather, "../../data/raw/weather_clean.csv")
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
write_csv(weather, "../../data/raw/weather_clean.csv")
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
write_csv(weather, "../../data/clean/weather_clean.csv")
library(tidyverse)
weather <- read.csv("../../data/raw/weather.csv")
weather <- weather %>%
mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
mutate(date = mdy(date)) %>%
mutate(dateInYear = yday(date)) %>%
mutate(month_name = month(date, label = TRUE))
write_csv(weather, "../../data/raw/weather_clean.csv")
